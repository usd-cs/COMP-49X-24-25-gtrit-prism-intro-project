@page "/wfcomments/details"
@using Microsoft.EntityFrameworkCore
@using IntroProject.Models
@inject IDbContextFactory<IntroProject.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>WFComment</h2>
    <hr />
    @if (wfcomment is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">PostId</dt>
            <dd class="col-sm-10">@wfcomment.PostId</dd>
            <dt class="col-sm-2">UserId</dt>
            <dd class="col-sm-10">@wfcomment.UserId</dd>
            <dt class="col-sm-2">Content</dt>
            <dd class="col-sm-10">@wfcomment.Content</dd>
        </dl>
        <div>
            <a href="@($"/wfcomments/edit?commentid={wfcomment.CommentId}")">Edit</a> |
            <a href="@($"/wfcomments")">Back to List</a>
        </div>
    }
</div>

@code {
    private WFComment? wfcomment;

    [SupplyParameterFromQuery]
    private int CommentId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        wfcomment = await context.Comments.FirstOrDefaultAsync(m => m.CommentId == CommentId);

        if (wfcomment is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
